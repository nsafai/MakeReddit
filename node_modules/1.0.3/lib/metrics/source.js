function source() {
    var wowMap = {
        "ip": "",
        "appName": "",
        "nodeTopic": "",
        "host_id": "",
        "value": {
            "content": {
                "resources": {
                },
                "tree": {},
                "maps": {
                }
            },
            "service_type": "1005"
        }
    }

    var resourcesList = []
    var mapslist = []
    var mpasNum = 1

    //获取整个Agent需要发送的数据 返回给request
    this.getWowMap = function () {
        for (var i = 0; i < resourcesList.length; i++) {
            wowMap.value.content.resources[resourcesList[i].type] = resourcesList[i].sourceDetailsList;
        }
        for (var i = 0; i < mapslist.length; i++) {
            wowMap.value.content.maps[mapslist[i].mpasNum] = mapslist[i].values;
        }
        return wowMap;
    }

    //获取实例信息 例如MGDB  Redis  mysql 
    this.addResources = function (type, host, db, port, user) {
        var resources = {
            "type": "",
            "sourceDetailsList": []
        }
        var sourceDetails = {}
        resources.type = type;
        sourceDetails.host = host;
        sourceDetails.db = db;
        sourceDetails.port = port;
        sourceDetails.cn_raw = user;
        resources.sourceDetailsList.push(sourceDetails);
        resourcesList.push(resources);
    }

    //获取当前站点IP
    this.setIp = function (ip) {
        wowMap.ip = ip;
    };

    this.setTree = function (tree) {
        wowMap.value.content.tree = tree;
    }

    //设置站点名称
    this.setAppName = function (appName) {
        wowMap.appName = appName;
    };

    //获取当前Topic信息 此信息需要读取其他配置文件
    this.setNodeTopic = function (nodeTopic) {
        wowMap.nodeTopic = nodeTopic;
    };



    //读取配置文件
    this.setHost_id = function (host_id) {
        wowMap.host_id = host_id;
    };

    //测试函数
    this.sayHello = function () {
        return wowMap.ip;
    }

    //设置堆栈信息 没走一个监测节点都要记录一条数据
    this.addMaps = function (mn, wt, cpu, mu, pmu, cl, nid, ct, pst, exception, errorMsg_raw, ps, ag0_raw, ag1, isSuccess, rt, instance_raw, service_type, dbn_raw,userName) {
        var mapsouce = {}
        mapsouce.mn = mn;
        mapsouce.wt = wt;
        mapsouce.cpu = 0;
        mapsouce.mu = 0;
        mapsouce.pmu = 0;
        mapsouce.cl = 0;
        mapsouce.nid = nid;
        mapsouce.ct = 1;
        if (typeof (pst) == "undefined" || pst == null) {
            pst = 0
        }
        mapsouce.pst = pst;
        mapsouce.exception = exception;
        mapsouce.errorMsg_raw = errorMsg_raw;
        var sqllist = []
        if (typeof (ps) == "undefined" || ps == null) {
            ps = ""
        }
        else {
            sqllist.push(ps['raw'])
            ps = sqllist
        }
        mapsouce.ps = ps;
        mapsouce.ag0_raw = ag0_raw;
        mapsouce.ag1 = ag1;
        mapsouce.isSuccess = isSuccess;
        mapsouce.rt = rt;
        mapsouce.cn_raw = userName;
        mapsouce.instance_raw = instance_raw;
        if (typeof (service_type) == "undefined" || service_type == null) {
            service_type = 0
        }
        mapsouce.service_type = service_type;
        if (typeof (dbn_raw) == "undefined" || dbn_raw == null) {
            dbn_raw = ""
        }
        mapsouce.dbn_raw = dbn_raw
        mapslist.push({ "mpasNum": mpasNum, "values": mapsouce });
        mpasNum++;
    }

    //获取request的信息一个请求只有一次
    this.addStart = function (request_info, fn, sn, sip, sport, cip, uri, rt, ct, wt, cpu, mu, pmu, httpResponseCode) {
        var start = {

        }
        start.request_info = request_info;
        start.fn = fn;
        start.sn = sn;
        start.sip = sip;
        start.sport = sport;
        start.cip = cip;
        start.uri = fn;
        start.rt = rt;
        start.ct = ct;
        start.wt = wt;
        start.cpu = 0;
        start.mu = 0;
        start.pmu = 0;
        start.httpResponseCode = httpResponseCode;
        start.parameters = [];
        mapslist.push({ "mpasNum": "{start}", "values": start });
    }


};
module.exports = source;