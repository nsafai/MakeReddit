var util = require('util');
var url = require('url');
var http = require('http');
var https = require('https');

function RequestMethod(config) {
    this._config = config;
}

//方法调用入口
RequestMethod.prototype.invoke = function (payload, callback) {
    if (!payload) {
        payload = {};
    }

    var serialized;
    try {
        serialized = JSON.stringify(payload);
    } catch (error) {
        return process.nextTick(function () {
            return callback(error);
        });
    }
    this._request(serialized, callback);
}

RequestMethod.prototype._request = function (data, callback) {

    var options = {
        method: this._config.method,
        host: this._config.host,
        port: this._config.port,
        path: this._config.path,
        body: data,
        onError: callback,
        onResponse: callback
    };

    this._safeRequest(options);

}

/**
 * ssl过滤
 * @param options
 * @private
 */
RequestMethod.prototype._safeRequest = function (options) {
    if (!options) throw new Error("Must include options to make request!");
    if (!options.host) throw new Error("Must include collector hostname!");
    if (!options.port) throw new Error("Must include collector port!");
    if (!options.onError) throw new Error("Must include error handler!");
    if (!options.onResponse) throw new Error("Must include response handler!");
    if (!options.body) throw new Error("Must include body to send to service!");
    if (!options.path) throw new Error("Must include URL to request!");

    var protocol = this._config.ssl ? 'https' : 'http';

    var requestOptions = {
        method: options.method,
        host: options.host,
        port: options.port,
        path: options.path,
        headers: {
            //"Content-Type": 'application/x-www-form-urlencoded',
            'Content-Type': 'text/plain'
        }
    }

    var request;

    if (this._config.ssl) {
        request = https.request(requestOptions);
    } else {
        request = http.request(requestOptions);
    }

    request.on('error', options.onError);
    request.on('response', options.onResponse);
    //options.body = "{\"Content\":" + JSON.stringify(options.body) + ",\"RoutingKey\":\"nodeTopic\",\"Method\":\"post\",\"ApiEnum\":\"1\",\"ObjID\":\"nodejsTracerSeg_b89373d2-7ec0-4b27-9c44-4cb05c203660\"}";
    request.end(options.body);

}

module.exports = RequestMethod;


